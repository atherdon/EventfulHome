{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"arduino",
				"arduinoready"
			],
			[
				"prin",
				"println"
			],
			[
				"dh",
				"DHTlastCheck"
			],
			[
				"dht",
				"DHTlastCheck"
			],
			[
				"si",
				"sizeOfSignal"
			],
			[
				"print",
				"println"
			],
			[
				"d",
				"data"
			],
			[
				"wid",
				"widgetFile"
			],
			[
				"my",
				"my_path"
			],
			[
				"qui",
				"quicksenddata"
			],
			[
				"quick",
				"quicksenddata"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "//Service for watering and monitoring a balcony garden - service listens to shortmanualwatering and should publish newsensorvalue, lowwaterleveldetected\n//Config should describe optimal water levels and warning levels. Service should be triggered by timer and send warning if water level in tank goes below critival level (config)\n/* \n    sensorread\n        type\n        source\n        value\n        datetime\n\n*/\nvar config = require('./serviceconfig.json');\n\nexports.initializeService = function(client) {\n    serialPort= new SerialPort(config.serialport, {\n        baudrate: 9600,\n         dataBits: 8, \n         parity: 'none', \n         stopBits: 1, \n         flowControl: false \n    });\n    \n    serialPort.on(\"open\", function () {\n        console.log(\"serialport open\");\n        arduinoready=true;\n        serialPort.on(\"close\", function(data) {\n            console.log(\"serialport closed\");\n            arduinoready=false;\n        });\n        serialPort.on(\"data\", function(data) {\n            console.log(\"from arduino:\"+data);\n            var res=data.split(\";\");\n            if (res.length<1) return; \n            switch (res[0]){\n            case \"SENSORREAD\":\n                var sensorJSONStr=\"{ type: '\"+res[1]+\"', source: '\"+res[2]+\"' value: '\"+res[3]+\"', datetime: '\"+Date.now()+\"'}\";\n                client.publish('/sensorread', JSON.parse(JSONStr));\n                break;\n            }\n        });\n\n        //set default sensorread freq - TODO: do sensor specific?\n        SendCommandToArduino(\"SETFREQ;*;10\");\n    });\n\n    client.subscribe('/manualwateringrequested', function(message){\n        console.log('performing manual watering');\n        SendCommandToArduino(\"WATER;*;\"+config.shortmanualwateringtime);   \n    });\n\n    //TODO: allow for sensor specific freq    \n    client.subscribe('/changedsensorreadfrequencyrequested', function(message){\n        console.log('setting sensor read frequency to read after (s): '+message.freq);\n        SendCommandToArduino(\"SETFREQ;*;\"+message.freq);  \n    });\n};\n\nfunction SendCommandToArduino(arduinoStr){\n    var arraytoholdcmd=[arduinoStr];\n}\n\nfunction SeqArduinoReq(postdataarray){\n    if (postdataarray.length<1 || !arduinoready) return;\n\n    var currentPost=postdataarray.shift();\n    console.log('sending command: '+arduinoStr);\n    serialPort.write(arduinoStr, function(err, results) {\n        console.log('err: ' + err);\n        console.log('results: ' + results);\n        //Wait for the ir command to be sent then send the next command (delay)\n        setTimeout( function (){\n            SeqArduInoReq(postdataarray);\n        }, 50);\n    });   \n}\n",
			"file": "Services/BalconyService/BalconyGardeningService.js",
			"file_size": 612,
			"file_write_time": 130370265818131203,
			"settings":
			{
				"buffer_size": 2623,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{\n   \"sensorsupervisors\":[\n      {\n         \"sensortosupervise\":\"temp1\",\n         \"criticallowvalue\":\"0.4\",\n         \"lowvalue\":\"0.4\",\n         \"highvalue\":\"0.8\",\n         \"criticalhighvalue\":\"1.0\"\n      },\n      {\n         \"sensortosupervise\":\"humid1\",\n         \"criticallowvalue\":\"0.4\",\n         \"lowvalue\":\"0.4\",\n         \"highvalue\":\"0.8\",\n         \"criticalhighvalue\":\"1.0\"\n      }\n   ],\n   \"commandpath\":\"irsend\",\n   \"shortmanualwateringtime\":\"10\",\n   \"serialport\": \"/dev/ttyUSB0\",\n   \"baudrate\":\"9600\"\n}",
			"file": "Services/BalconyService/serviceconfig.json.example",
			"file_size": 995,
			"file_write_time": 130370265818131203,
			"settings":
			{
				"buffer_size": 510,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 327.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ardui",
				"Set Syntax: Arduino"
			],
			[
				"arduino",
				"Set Syntax: Arduino"
			],
			[
				"set",
				"Set Syntax: C"
			],
			[
				"pus",
				"Git: Push"
			],
			[
				"comm",
				"Git: Quick Commit"
			],
			[
				"git",
				"Git: Change Branch"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"",
				"Git: Add Current File"
			],
			[
				"pu",
				"Git: Push"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: Insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Add Repository"
			],
			[
				"Package Control: add",
				"Package Control: Add Repository"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"git ",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/jakob/EventfulHome/Services/LivingroomService/Livingroom.js",
		"/home/jakob/EventfulHome/Services/EventfulHomeRemoteServerService/service.js",
		"/home/jakob/EventfulHome/node_modules/faye/node_modules/concat-stream/.npmignore",
		"/home/jakob/EventfulHome/Services/EventfulHomeRemoteServerService/Android client/.gradle/1.10/taskArtifacts/fileSnapshots.bin",
		"/home/jakob/EventfulHome/node_modules/faye/browser/faye-browser.js",
		"/home/jakob/EventfulHome/Services/LivingroomService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/HDMISwitchService/samsung tv example",
		"/home/jakob/EventfulHome/Services/YamahaReceiverService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/LivingroomService/ArduinoIRSendBySerial/IRSendBySerial.ino",
		"/home/jakob/EventfulHome/node_modules/serialport/AUTHORS",
		"/home/jakob/EventfulHome/Services/EventfulHomeRemoteServerService/Android client/settings.gradle",
		"/home/jakob/EventfulHome/ServiceHost.js",
		"/home/jakob/EventfulHome/Services/HDMISwitchService/arduino.ino",
		"/home/jakob/EventfulHome/Services/EventfulHomeRemoteServerService/EventfulHomeRemoteServer.js",
		"/home/jakob/EventfulHome/Services/PVRService/PVR.js",
		"/home/jakob/EventfulHome/Services/LightService/TellstickService.js",
		"/home/jakob/EventfulHome/Services/PVRService/widgets/humaxpvr.html",
		"/home/jakob/EventfulHome/Services/TestService/TestService.js",
		"/home/jakob/EventfulHome/Services/TestService/service.js",
		"/home/jakob/EventfulHome/Services/RemoteWidgetService/humaxpvr.html",
		"/home/jakob/EventfulHome/Services/oldHDMIservice/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/SamsungTVService/SamsungTVService.js",
		"/home/jakob/EventfulHome/Services/RemoteWidgetService/HumaxPVR.html",
		"/home/jakob/EventfulHome/Services/LightService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/YamahaReceiverService/YamahaReceiver.js",
		"/home/jakob/EventfulHome/Services/PVRService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/HDMISwitchService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/HDMISwitchService/HDMISwitch.js",
		"/home/jakob/EventfulHome/Services/TestService/TestLivingroomServices.js",
		"/home/jakob/EventfulHome/Services/TestService/ListeningTestService.js",
		"/home/jakob/EventfulHome/Services/EventfulHomeRemoteServerService/EventfulHomeRemote/res/menu/main.xml",
		"/home/jakob/EventfulHome/Services/BalconyService/serviceconfig.json.example",
		"/home/jakob/EventfulHome/Services/TemplateService/config.json",
		"/home/jakob/EventfulHome/.gitignore",
		"/home/jakob/EventfulHome/README.md",
		"/home/jakob/EventfulHome/.idea/workspace.xml",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/CSSselect/node_modules/domutils/lib/querying.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/csprng/node_modules/sequin/lib/sequin.js",
		"/home/jakob/homeauto/EventServices/Services/MusicService/SqueezeBoxRemoteService.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/csprng/node_modules/sequin/package.json",
		"/home/jakob/homeauto/EventfulHomeRemote/.idea/compiler.xml",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/test/common.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/htmlparser2/node_modules/domhandler/test/cases/06-comment_in_script.json",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/htmlparser2/node_modules/domhandler/test/cases/13-comment_in_text.json",
		"/home/jakob/homeauto/EventServices/Services/BalconyService/BalconyGardeningService.js",
		"/home/jakob/homeauto/node_modules/faye/package.json",
		"/home/jakob/homeauto/EventfulHomeRemote/res/values/ids.xml",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/index.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/htmlparser2/test/Events/11-script_in_script.json",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/htmlparser2/node_modules/domhandler/test/cases/07-unescaped_in_style.json",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/lib/static.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/bl/node_modules/readable-stream/test/simple/test-stream2-large-read-stall.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/node_modules/htmlparser2/node_modules/readable-stream/test/simple/test-stream2-readable-from-list.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/transform.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/cheerio/CONTRIBUTING.md",
		"/home/jakob/homeauto/EventServices/Services/TemplateService/config.json",
		"/home/jakob/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/jakob/homeauto/EventServices/Services/HDMISwitchService/HDMISwitch.js",
		"/home/jakob/homeauto/EventServices/Services/XBMCService/XBMC.js",
		"/home/jakob/homeauto/README.md",
		"/home/jakob/homeauto/EventServices/ServiceHost.js",
		"/home/jakob/homeauto/EventServices/Services/LGReceiverService/LGReceiver.js",
		"/home/jakob/homeauto/node_modules/stdio/LICENSE",
		"/home/jakob/homeauto/AndroidClient/ServerProxy.java",
		"/home/jakob/homeauto/EventfulHomeRemote/.idea/dictionaries/jakob.xml",
		"/home/jakob/homeauto/EventfulHomeRemote/.idea/misc.xml",
		"/home/jakob/homeauto/EventfulHomeRemote/.idea/scopes/scope_settings.xml",
		"/home/jakob/homeauto/EventfulHomeRemote/.idea/copyright/profiles_settings.xml",
		"/home/jakob/homeauto/EventServices/Services/TestService/TestLivingroomServices.js",
		"/home/jakob/homeauto/EventServices/Services/TemplateService/BluetoothArduinoService.js",
		"/home/jakob/homeauto/EventServices/Services/TemperatureLoggerService/creatingChart.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/test-replacements.js",
		"/home/jakob/homeauto/EventfulHomeRemote/src/se/eventfulhome/eventfulhomeremote/MainActivity.java",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/string_decoder/build/node_modules/hyperquest/example/many_request.js",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/typedarray/readme.markdown",
		"/home/jakob/homeauto/node_modules/faye/node_modules/concat-stream/node_modules/readable-stream/node_modules/core-util-is/package.json",
		"/home/jakob/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/jakob/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/jakob/.config/sublime-text-2/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			";",
			"SeqHttpReq",
			"serial.pr",
			"serial.print",
			"-",
			" ",
			"listen",
			"serial",
			"IRSIGNAL",
			"IRSIGNAL;NEC;FFFFFFFF;0",
			"IRSIGNAL;SAMSUNG;E0E008F7;32",
			"cacheWidgets",
			"resourceJSONArray",
			"  ",
			"href",
			"image-maps-2014-02-20-133204",
			";",
			"javascript:",
			"    ",
			"href=\"\" ",
			"alt=\"\" title=\"\" ",
			"Image-Maps-Com-image-maps-2014-02-20-133204",
			"javascript:",
			"eventservices",
			"hide",
			"folders",
			"hide"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\n",
			"SeqArduinoReq",
			"",
			",",
			"SENDIR",
			"",
			" ",
			"onclick",
			"imagemap",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Services/BalconyService/BalconyGardeningService.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2623,
						"regions":
						{
						},
						"selection":
						[
							[
								362,
								362
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Services/BalconyService/serviceconfig.json.example",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 510,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.ArduinoIRSendBySerial":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 112.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"project": "EventfulHome.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"git",
				".gitignore"
			],
			[
				"lg",
				"EventServices/Services/LGReceiverService/LGReceiver.js"
			],
			[
				"host",
				"EventServices/ServiceHost.js"
			],
			[
				"ba",
				"EventServices/Services/BalconyService/BalconyGardeningService.js"
			],
			[
				"xb",
				"EventServices/Services/XBMCService/XBMC.js"
			],
			[
				"hdmi",
				"EventServices/Services/HDMISwitchService/HDMISwitch.js"
			],
			[
				"x",
				"EventServices/Services/XBMCService/XBMC.js"
			],
			[
				"bal",
				"EventServices/Services/BalconyService/BalconyGardeningService.js"
			],
			[
				"read",
				"README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 277.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
